class ConsecutiveNumbersChecker:
This line starts the definition of a class named ConsecutiveNumbersChecker.


    def __init__(self, lists):
        self.lists = lists
This is the constructor method (__init__) of the class. 
It takes a parameter lists and initializes an instance variable self.lists with the value of lists.
This allows us to pass a list of lists to the class when creating an instance.


    def check_consecutive_numbers(self):
This is a method defined within the class named check_consecutive_numbers. 
It doesn't take any parameters other than self, which is a reference to the instance of the class.


        for i, sublist in enumerate(self.lists):
This line starts a for loop that iterates over each sublist within the self.lists list. 
The enumerate function is used to get both the index (i) and the sublist itself (sublist) at each iteration.


            for j in range(len(sublist) - 2):
This line starts another for loop that iterates over the indices of each element in the sublist, 
except for the last two elements. It uses the range function to generate a sequence of indices,
starting from 0 and ending at len(sublist) - 3. The -2 is used because we need to access sublist[j + 2] inside the loop,
so we want to stop iterating two indices before the end.


                if sublist[j] + 1 == sublist[j + 1] and sublist[j + 1] + 1 == sublist[j + 2]:
This line checks if three consecutive elements in the sublist satisfy the condition sublist[j] + 1 == sublist[j + 1] 
(the first two elements are consecutive) and sublist[j + 1] + 1 == sublist[j + 2] (the last two elements are consecutive).


                    return i
If three consecutive elements are found, the current index i is returned as the result and the execution of the method terminates.


        return -1
If no three consecutive elements are found in any sublist, -1 is returned as the result.


lists = [[27, 9, 2, 8, 8, 9, 27, 8], [1, 18, 18, 18, 19, 4, 4, 1], [1, 5, 5, 5, 8, 7, 4, 5], [1, 2, 3, 5, 8, 4, 4, 3],
         [18, 27, 63, 36, 27, 27, 27, 1, 5], [3, 5, 8, 4, 4, 4, 2, 15, 15, 151]]
This line defines the lists variable and assigns it a list of lists. 
These are the input lists on which we want to check for three consecutive numbers.


checker = ConsecutiveNumbersChecker(lists)
Here, an instance of the ConsecutiveNumbersChecker class is created by calling its constructor with the lists variable as the argument.
This creates an object named checker that can perform the consecutive number checking.


result = checker.check_consecutive_numbers()
The check_consecutive_numbers method is called on the checker object, 
and the return value is stored in the result variable. 
It will contain either the index of the first sublist with three consecutive numbers or -1 if no such sublist is found.


if result != -1:
    print("List containing three consecutive numbers found at position:", result)
    sublist = lists[result]
    print("List:", sublist)
else:
    print("No list contains three consecutive numbers.")
Finally, this code block checks the value of result and prints the appropriate 
message based on whether a sublist with three consecutive numbers is found or not. 
If a sublist is found, it prints the position/index of the sublist and the sublist itself. 
Otherwise, it prints a message indicating that no sublist contains three consecutive numbers.
